## Binary operators.

public trait BinaryEqualEqual[Other, Result] {
  # The binary `==` operator.

  fun equalEqual(other: Other): Result
}

public trait BinaryExclamationEqual[Other, Result] {
  # The binary `!=` operator.

  fun exclamationEqual(other: Other): Result
}

public trait BinaryLess[Other, Result] {
  # The binary `<` operator.

  fun less(other: Other): Result
}

public trait BinaryLessEqual[Other, Result] {
  # The binary `<=`` operator.

  fun lessEqual(other: Other): Result
}

public trait BinaryGreater[Other, Result] {
  # The binary `>` operator.

  fun greater(other: Other): Result
}

public trait BinaryGreaterEqual[Other, Result] {
  # The binary `>=` operator.

  fun greaterEqual(other: Other): Result
}

public trait BinaryPlus[Other, Result] {
  # The binary `+` operator.

  fun plus(other: Other): Result
}

public trait BinaryMinus[Other, Result] {
  # The binary `-` operator.

  fun minus(other: Other): Result
}

public trait BinaryStar[Other, Result] {
  # The binary `*` operator.

  fun star(other: Other): Result
}

public trait BinarySlash[Other, Result] {
  # The binary `/` operator.

  fun slash(other: Other): Result
}

public trait BinarySlashSlash[Other, Result] {
  # The binary `//` operator.

  fun slashSlash(other: Other): Result
}

public trait BinaryPercent[Other, Result] {
  # The binary `%` operator.

  fun percent(other: Other): Result
}

public trait BinaryAmpersand[Other, Result] {
  # The binary `&` operator.

  fun ampersand(other: Other): Result
}

public trait BinaryBar[Other, Result] {
  # The binary `|` operator.

  fun bar(other: Other): Result
}

public trait BinaryEqualsGreater[Other, Result] {
  # The binary `=>` operator.

  fun bar(other: Other): Result
}

## Prefix operators.

public trait PrefixMinus[Other, Result] {
  # The prefix `-` operator.

  fun minus(): Result
}

public trait PrefixExclamation[Other, Result] {
  # The prefix `!` operator.

  fun exclamation(): Result
}
