name: Compiler

on: pull_request

env:
  RUST_VERSION: nightly

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Cache Rust dependencies and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path compiler/Cargo.toml

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Cache Rust dependencies and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path compiler/Cargo.toml

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: rustfmt

      - name: Cache Rust dependencies and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path compiler/Cargo.toml --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: clippy

      - name: Cache Rust dependencies and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path compiler/Cargo.toml -- -D warnings

  core:
    name: Core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Cache Rust dependencies and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release --manifest-path=compiler/Cargo.toml -- build --debug packages/Core/_.candy

  # fuzzing:
  #   name: Fuzzing
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ env.RUST_VERSION }}
  #         override: true
  #
  #     - name: Cache Rust dependencies and build
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cargo/bin/
  #           ~/.cargo/git/db/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/registry/index/
  #           target/
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: ${{ runner.os }}-cargo-
  #
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: run
  #         args: --manifest-path compiler/Cargo.toml -- fuzz packages/Benchmark.candy

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Cache Rust dependencies and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run benchmark
        run: cargo bench -- --output-format bencher | tee output.txt

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Compiler
          tool: cargo
          output-file-path: output.txt
          gh-pages-branch: gh-pages
          gh-repository: github.com/candy-lang/benchmark-results
          benchmark-data-dir-path: dev/bench
          github-token: ${{ secrets.BENCHMARK_RESULTS_TOKEN }}
          auto-push: true
          comment-always: true
          comment-on-alert: true
          alert-threshold: 150%
          fail-on-alert: true
