[equals] = use "Builtins"

check condition :=
  # Panics if the `condition` is `False`.
  #
  # This function is useful for ensuring that your mental model of the state of
  # your program matches its actual state.
  isConditionBool = condition %
    True | False -> True
    _ -> False
  needs isConditionBool
  needs condition "A check failed."

checkEquals actual expected :=
  # Panics if `actual` and `expected` are different.
  needs (actual | equals expected) "A check failed: Expected {actual} to be {expected}."
