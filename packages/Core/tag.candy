builtins = use "Builtins"
bool = use "..bool"
[ifElse] = use "..controlFlow"
type = use "..type"

is value := type.is value Tag

hasValue := builtins.tagHasValue

withoutValue := builtins.tagWithoutValue

getValue := builtins.tagGetValue

withSymbol tag symbolTag :=
  needs (is tag)
  needs (is symbolTag)
  needs (symbolTag | hasValue | bool.not)
  ifElse (tag | hasValue) { symbolTag (tag | getValue) } { symbolTag | withoutValue }

withValue tag value :=
  needs (is tag)
  (tag | withoutValue) value

test =
  [checkEquals] = use "..check"

  checkEquals (is 3) False
  checkEquals (is Foo) True
  checkEquals (is (Foo 2)) True

  checkEquals (hasValue Foo) False
  checkEquals (hasValue (Foo 2)) True

  checkEquals (withoutValue Foo) Foo
  checkEquals (withoutValue (Foo 2)) Foo

  checkEquals (getValue (Foo 2)) 2

  checkEquals (withSymbol (Foo 2) Bar) (Bar 2)
