channel = use "..Channel"
function = use "..Function"
structGet = (use "..Struct").getUnwrap

parallel body := 
  needs (function.is1 body)
  returnChannel = channel.create 1
  returnSendPort = structGet returnChannel 0
  returnReceivePort = structGet returnChannel 1
  âœ¨.parallel body returnSendPort
  channel.receive returnReceivePort

async nursery body :=
  needs (channel.isSendPort nursery)
  needs (function.is0 body)
  returnChannel = channel.create 1
  returnSendPort = structGet returnChannel 0
  returnReceivePort = structGet returnChannel 1
  channel.send nursery [Closure: body, ReturnChannel: returnSendPort]
  returnReceivePort

await fiber :=
  needs (channel.isReceivePort fiber)
  channel.receive fiber
