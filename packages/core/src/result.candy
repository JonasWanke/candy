public trait Result<Success, ErrorType> {
  /// The result of an operation that might fail.
  ///
  /// The following cases exist:
  /// * In the success case, an `Ok` is returned, containing the returned value.
  /// * In the error case, an `Error` is returned, containing an error describing what went wrong.

  fun unwrap(): Success
}

public class Ok<Success, ErrorType> {
  /// The result of an operation that succeeded.

  public let value: Success
}
impl<Success, ErrorType> Ok<Success, ErrorType>: Result<Success, ErrorType> {
  fun unwrap(): Success { value }
}

public class Error<Success, ErrorType> {
  /// The result of an operation that failed.

  public let error: ErrorType
}
impl<Success, ErrorType> Error<Success, ErrorType>: Result<Success, ErrorType> {
  fun unwrap(): Success { throw "Unwrapped `Error`: {error}." }
}
