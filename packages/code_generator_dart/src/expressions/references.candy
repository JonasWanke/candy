use compiler_utils
use dart_code
use hir
use incremental

use ..utils

public fun compileParameterReferenceValueExpression(
  context: QueryContext<List<CompilerError>>,
  uri: HirValueExpressionUri,
  expression: HirParameterReferenceValueExpression,
): DartStatement {
  query<DartStatement, List<CompilerError>>(
    context,
    "code_generator_dart.compileParameterReferenceValueExpression",
    DataTuple2<HirValueExpressionUri, HirParameterReferenceValueExpression>(uri, expression), {
    let parameterName = if (expression.parameter is HirValueParameter) {
      (expression.parameter as HirValueParameter).name
    } else {
      (expression.parameter as HirLambdaValueParameter).name
    }
    let identifier = DartIdentifier(parameterName, None<String>())
    Tuple(saveValueExpression(context, uri, expression, identifier), List.empty<CompilerError>())
  })
}
