# HIR for module Examples:parallel

$use = { (non-fuzzable) $use:relativePath ->
  $use:importedModule = relative to module Examples:parallel, use $use:relativePath
}
$0 = $use
$1 = builtinTextConcatenate
$2 = builtinTypeOf
$3 = Text
$4 = builtinEquals
$5 = builtinIfElse
$6 = builtinToDebugText
$7 = "Core"
$8 = call $0 with $7
$9 = destructure $8 into [Async: p$0, Await: p$1, Channel: p$2, Parallel: p$3, Text: p$4]
$async = p$0
$await = p$1
$channel = p$2
$parallel = p$3
$text = p$4
$10 = Nothing
$11 = { (non-fuzzable) $11:environment ->
  $11:print = { (fuzzable) $11:print:message ->
    $11:print:0 = "Builtins"
    $11:print:1 = call $use with $11:print:0
    $11:print:2 = builtinStructGet
    $11:print:3 = StructGet
    $11:print:4 = call $11:print:2 with $11:print:1 $11:print:3
    $11:print:5 = $text
    $11:print:6 = Is
    $11:print:7 = call $11:print:4 with $11:print:5 $11:print:6
    $11:print:8 = $11:print:message
    $11:print:9 = call $11:print:7 with $11:print:8
    $11:print:10 = "`text.is message` was not satisfied"
    $11:print:11 = needs $11:print:9 with reason $11:print:10
    $11:print:12 = "Builtins"
    $11:print:13 = call $use with $11:print:12
    $11:print:14 = builtinStructGet
    $11:print:15 = StructGet
    $11:print:16 = call $11:print:14 with $11:print:13 $11:print:15
    $11:print:17 = $11:environment
    $11:print:18 = Stdout
    $11:print:19 = call $11:print:16 with $11:print:17 $11:print:18
    $11:print:20 = "Builtins"
    $11:print:21 = call $use with $11:print:20
    $11:print:22 = builtinStructGet
    $11:print:23 = StructGet
    $11:print:24 = call $11:print:22 with $11:print:21 $11:print:23
    $11:print:25 = $channel
    $11:print:26 = Send
    $11:print:27 = call $11:print:24 with $11:print:25 $11:print:26
    $11:print:28 = $11:print:message
    $11:print:29 = call $11:print:27 with $11:print:19 $11:print:28
  }
  $11:print#1 = $11:print
  $11:0 = $parallel
  $11:1 = { (non-fuzzable) $11:1:nursery ->
    $11:1:0 = $11:1:nursery
    $11:1:1 = $async
    $11:1:2 = { (non-fuzzable) ->
      $11:1:2:0 = $11:print#1
      $11:1:2:1 = builtinTextConcatenate
      $11:1:2:2 = builtinTypeOf
      $11:1:2:3 = Text
      $11:1:2:4 = builtinEquals
      $11:1:2:5 = builtinIfElse
      $11:1:2:6 = builtinToDebugText
      $11:1:2:7 = "Hello from fiber!"
      $11:1:2:8 = call $11:1:2:0 with $11:1:2:7
      $11:1:2:9 = builtinTextConcatenate
      $11:1:2:10 = builtinTypeOf
      $11:1:2:11 = Text
      $11:1:2:12 = builtinEquals
      $11:1:2:13 = builtinIfElse
      $11:1:2:14 = builtinToDebugText
      $11:1:2:15 = "Hello, async await!"
    }
    $11:1:3 = call $11:1:1 with $11:1:0 $11:1:2
    $11:1:4 = $await
    $11:1:5 = call $11:1:4 with $11:1:3
    $11:1:6 = $11:print#1
    $11:1:7 = call $11:1:6 with $11:1:5
    $11:1:8 = $11:1:nursery
    $11:1:9 = $async
    $11:1:10 = { (non-fuzzable) ->
      $11:1:10:0 = $11:print#1
      $11:1:10:1 = builtinTextConcatenate
      $11:1:10:2 = builtinTypeOf
      $11:1:10:3 = Text
      $11:1:10:4 = builtinEquals
      $11:1:10:5 = builtinIfElse
      $11:1:10:6 = builtinToDebugText
      $11:1:10:7 = "Kiwi"
      $11:1:10:8 = call $11:1:10:0 with $11:1:10:7
    }
    $11:1:11 = call $11:1:9 with $11:1:8 $11:1:10
    $11:1:12 = $11:1:nursery
    $11:1:13 = $async
    $11:1:14 = { (non-fuzzable) ->
      $11:1:14:0 = $11:print#1
      $11:1:14:1 = builtinTextConcatenate
      $11:1:14:2 = builtinTypeOf
      $11:1:14:3 = Text
      $11:1:14:4 = builtinEquals
      $11:1:14:5 = builtinIfElse
      $11:1:14:6 = builtinToDebugText
      $11:1:14:7 = "Banana"
      $11:1:14:8 = call $11:1:14:0 with $11:1:14:7
    }
    $11:1:15 = call $11:1:13 with $11:1:12 $11:1:14
    $11:1:16 = $11:print#1
    $11:1:17 = builtinTextConcatenate
    $11:1:18 = builtinTypeOf
    $11:1:19 = Text
    $11:1:20 = builtinEquals
    $11:1:21 = builtinIfElse
    $11:1:22 = builtinToDebugText
    $11:1:23 = "Hi"
    $11:1:24 = call $11:1:16 with $11:1:23
  }
  $11:2 = call $11:0 with $11:1
}
$12 = destructure $11 into p$0
$main = p$0
$13 = Nothing
$14 = Main
$15 = [$14: $main]
