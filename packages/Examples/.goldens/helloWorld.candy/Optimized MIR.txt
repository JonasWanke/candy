# Optimized MIR for module Examples:helloWorld
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::channelSend:12
$2 = Builtins::channelSend:5
$3 = Builtins::structGet:12
$4 = Builtins::structGet:14
$5 = Builtins::structGet:21
$6 = Builtins::structGet:5
$7 = Builtins::typeIs:19
$8 = Builtins::typeIs:25
$9 = Examples:helloWorld:11:23
$10 = Examples:helloWorld:11:7
$11 = anonymous:$generated::needs
$12 = builtinChannelSend
$13 = builtinEquals
$14 = builtinIfElse
$15 = builtinStructGet
$16 = builtinStructHasKey
$17 = builtinTypeOf
$18 = False
$19 = Main
$20 = Nothing
$21 = SendPort
$22 = Stdout
$23 = Struct
$24 = Text
$25 = True
$26 = "Hello, world!"
$27 = "The `condition` must be either `True` or `False`."
$28 = "The `reason` must be a text."
$29 = "`sendPort | typeIs SendPort` was not satisfied"
$30 = "`struct | typeIs Struct` was not satisfied"
$31 = "`struct | ✨.structHasKey key` was not satisfied"
# anonymous:$generated::needs:isConditionTrue:then
$32 = { (responsible $33) ->
  $34 = $25
}
# anonymous:$generated::needs:isConditionBool:then
$35 = { (responsible $36) ->
  $37 = $20
}
# anonymous:$generated::needs
$38 = { $39 $40 $41 (+ responsible $42) ->
  $43 = call $13 with $39 $25 ($11 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $44 = { (responsible $45) ->
    $46 = call $13 with $39 $18 ($11 is responsible)
  }
  $47 = call $14 with $43 $32 $44 ($11 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $48 = { (responsible $49) ->
    $50 = panicking because $27 ($42 is at fault)
  }
  $51 = call $14 with $47 $35 $48 ($11 is responsible)
  $52 = call $17 with $40 ($42 is responsible)
  $53 = call $13 with $52 $24 ($42 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $54 = { (responsible $55) ->
    $56 = panicking because $28 ($42 is at fault)
  }
  $57 = call $14 with $53 $35 $54 ($11 is responsible)
  # anonymous:$generated::needs:condition:else
  $58 = { (responsible $59) ->
    $60 = panicking because $40 ($41 is at fault)
  }
  $61 = call $14 with $39 $35 $58 ($11 is responsible)
}
# Examples:helloWorld:11
$62 = { $63 (+ responsible $64) ->
  $65 = call $17 with $63 ($7 is responsible)
  $66 = call $13 with $65 $23 ($8 is responsible)
  $67 = call $38 with $66 $30 $10 ($6 is responsible)
  $68 = call $16 with $63 $22 ($3 is responsible)
  $69 = call $38 with $68 $31 $10 ($4 is responsible)
  $70 = call $15 with $63 $22 ($5 is responsible)
  $71 = call $17 with $70 ($7 is responsible)
  $72 = call $13 with $71 $21 ($8 is responsible)
  $73 = call $38 with $72 $29 $9 ($2 is responsible)
  $74 = call $12 with $70 $26 ($1 is responsible)
}
$75 = [$19: $62]
