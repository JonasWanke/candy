# Optimized MIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::getArgumentCount:11
$3 = Builtins::getArgumentCount:5
$4 = Builtins::ifElse:1
$5 = Builtins::ifElse:12
$6 = Builtins::ifElse:15
$7 = Builtins::ifElse:20
$8 = Builtins::ifElse:26
$9 = Builtins::ifElse:29
$10 = Builtins::ifElse:34
$11 = Builtins::ifElse:42
$12 = Builtins::ifElse:6
$13 = Builtins::intAdd:11
$14 = Builtins::intAdd:18
$15 = Builtins::intAdd:5
$16 = Builtins::intCompareTo:11
$17 = Builtins::intCompareTo:18
$18 = Builtins::intCompareTo:5
$19 = Builtins::intSubtract:18
$20 = Builtins::intSubtract:5
$21 = Builtins::typeIs:19
$22 = Builtins::typeIs:25
$23 = Examples:fibonacci:compareTo:10
$24 = Examples:fibonacci:fibonacci:2:11
$25 = Examples:fibonacci:fibonacci:2:13:11
$26 = Examples:fibonacci:fibonacci:2:13:12
$27 = Examples:fibonacci:fibonacci:2:13:32
$28 = Examples:fibonacci:fibonacci:2:13:33
$29 = Examples:fibonacci:fibonacci:2:13:34
$30 = Examples:fibonacci:fibonacci:2:14
$31 = Examples:fibonacci:recursive:0:0:3
$32 = Examples:fibonacci:recursive:0:6
$33 = Examples:fibonacci:recursive:6
$34 = anonymous:$generated::needs
$35 = builtinEquals
$36 = builtinGetArgumentCount
$37 = builtinIfElse
$38 = builtinIntAdd
$39 = builtinIntCompareTo
$40 = builtinIntSubtract
$41 = builtinListGet
$42 = builtinTagGetValue
$43 = builtinTagHasValue
$44 = builtinTagWithoutValue
$45 = builtinTextConcatenate
$46 = builtinToDebugText
$47 = builtinTypeOf
$48 = CompareTo
$49 = False
$50 = Function
$51 = Int
$52 = IsLessThan
$53 = Less
$54 = Main
$55 = Match
$56 = NoMatch
$57 = Nothing
$58 = Recursive
$59 = Tag
$60 = Text
$61 = True
$62 = 0
$63 = 1
$64 = 2
$65 = 15
$66 = ", got "
$67 = ", got `"
$68 = "."
$69 = "Expected "
$70 = "Expected a "
$71 = "Expected tag to not have a value, but it has one: `"
$72 = "The `condition` must be either `True` or `False`."
$73 = "The `reason` must be a text."
$74 = "`."
$75 = "`a | typeIs Int` was not satisfied"
$76 = "`b | typeIs Int` was not satisfied"
$77 = "`conditionIsBool` was not satisfied"
$78 = "`else | getArgumentCount | equals 0` was not satisfied"
$79 = "`else | typeIs Function` was not satisfied"
$80 = "`function | typeIs Function` was not satisfied"
$81 = "`minuend | typeIs Int` was not satisfied"
$82 = "`then | getArgumentCount | equals 0` was not satisfied"
$83 = "`then | typeIs Function` was not satisfied"
# anonymous:$generated::needs:isConditionTrue:then
$84 = { (responsible $85) ->
  $86 = $61
}
# anonymous:$generated::needs:isConditionBool:then
$87 = { (responsible $88) ->
  $89 = $57
}
# anonymous:$generated::needs
$90 = { $91 $92 $93 (+ responsible $94) ->
  $95 = call $35 with $91 $61 ($34 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $96 = { (responsible $97) ->
    $98 = call $35 with $91 $49 ($34 is responsible)
  }
  $99 = call $37 with $95 $84 $96 ($34 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $100 = { (responsible $101) ->
    $102 = panicking because $72 ($94 is at fault)
  }
  $103 = call $37 with $99 $87 $100 ($34 is responsible)
  $104 = call $47 with $92 ($94 is responsible)
  $105 = call $35 with $104 $60 ($94 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $106 = { (responsible $107) ->
    $108 = panicking because $73 ($94 is at fault)
  }
  $109 = call $37 with $105 $87 $106 ($34 is responsible)
  # anonymous:$generated::needs:condition:else
  $110 = { (responsible $111) ->
    $112 = panicking because $92 ($93 is at fault)
  }
  $113 = call $37 with $91 $87 $110 ($34 is responsible)
}
$114 = ($55,)
# Builtins::not:1:equals:then
$115 = { (responsible $116) ->
  $117 = $114
}
# Builtins::ifElse
$118 = { $119 $120 $121 (+ responsible $122) ->
  $123 = call $47 with $119 ($4 is responsible)
  $124 = call $35 with $59 $123 ($4 is responsible)
  # Builtins::ifElse:1:equals:then
  $125 = { (responsible $126) ->
    $127 = call $44 with $119 ($4 is responsible)
    $128 = call $35 with $61 $127 ($4 is responsible)
    # Builtins::ifElse:1:equals:then
    $129 = { (responsible $130) ->
      $131 = call $43 with $119 ($4 is responsible)
      $132 = call $35 with $49 $131 ($4 is responsible)
      # Builtins::ifElse:1:equals:else
      $133 = { (responsible $134) ->
        $135 = call $46 with $49 ($4 is responsible)
        $136 = call $46 with $131 ($4 is responsible)
        $137 = call $42 with $119 ($4 is responsible)
        $138 = call $46 with $137 ($4 is responsible)
        $139 = call $45 with $71 $138 ($4 is responsible)
        $140 = call $45 with $139 $74 ($4 is responsible)
        $141 = ($56, $140)
      }
      $142 = call $37 with $132 $115 $133 ($4 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $143 = { (responsible $144) ->
      $145 = call $46 with $61 ($4 is responsible)
      $146 = call $46 with $127 ($4 is responsible)
      $147 = call $45 with $69 $145 ($4 is responsible)
      $148 = call $45 with $147 $66 ($4 is responsible)
      $149 = call $45 with $148 $146 ($4 is responsible)
      $150 = call $45 with $149 $68 ($4 is responsible)
      $151 = ($56, $150)
    }
    $152 = call $37 with $128 $129 $143 ($4 is responsible)
  }
  # Builtins::ifElse:1:equals:else
  $153 = { (responsible $154) ->
    $155 = call $46 with $59 ($4 is responsible)
    $156 = call $46 with $123 ($4 is responsible)
    $157 = call $45 with $70 $155 ($4 is responsible)
    $158 = call $45 with $157 $67 ($4 is responsible)
    $159 = call $45 with $158 $156 ($4 is responsible)
    $160 = call $45 with $159 $74 ($4 is responsible)
    $161 = ($56, $160)
  }
  $162 = call $37 with $124 $125 $153 ($4 is responsible)
  $163 = call $41 with $162 $62 ($4 is responsible)
  $164 = call $35 with $163 $55 ($4 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $165 = { (responsible $166) ->
    $167 = $162
  }
  # Builtins::ifElse:1:isMatch:else
  $168 = { (responsible $169) ->
    $170 = call $47 with $119 ($4 is responsible)
    $171 = call $35 with $59 $170 ($4 is responsible)
    # Builtins::ifElse:1:equals:then
    $172 = { (responsible $173) ->
      $174 = call $44 with $119 ($4 is responsible)
      $175 = call $35 with $49 $174 ($4 is responsible)
      # Builtins::ifElse:1:equals:then
      $176 = { (responsible $177) ->
        $178 = call $43 with $119 ($4 is responsible)
        $179 = call $35 with $49 $178 ($4 is responsible)
        # Builtins::ifElse:1:equals:else
        $180 = { (responsible $181) ->
          $182 = call $46 with $49 ($4 is responsible)
          $183 = call $46 with $178 ($4 is responsible)
          $184 = call $42 with $119 ($4 is responsible)
          $185 = call $46 with $184 ($4 is responsible)
          $186 = call $45 with $71 $185 ($4 is responsible)
          $187 = call $45 with $186 $74 ($4 is responsible)
          $188 = ($56, $187)
        }
        $189 = call $37 with $179 $115 $180 ($4 is responsible)
      }
      # Builtins::ifElse:1:equals:else
      $190 = { (responsible $191) ->
        $192 = call $46 with $49 ($4 is responsible)
        $193 = call $46 with $174 ($4 is responsible)
        $194 = call $45 with $69 $192 ($4 is responsible)
        $195 = call $45 with $194 $66 ($4 is responsible)
        $196 = call $45 with $195 $193 ($4 is responsible)
        $197 = call $45 with $196 $68 ($4 is responsible)
        $198 = ($56, $197)
      }
      $199 = call $37 with $175 $176 $190 ($4 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $200 = { (responsible $201) ->
      $202 = call $46 with $59 ($4 is responsible)
      $203 = call $46 with $170 ($4 is responsible)
      $204 = call $45 with $70 $202 ($4 is responsible)
      $205 = call $45 with $204 $67 ($4 is responsible)
      $206 = call $45 with $205 $203 ($4 is responsible)
      $207 = call $45 with $206 $74 ($4 is responsible)
      $208 = ($56, $207)
    }
    $209 = call $37 with $171 $172 $200 ($4 is responsible)
  }
  $210 = call $37 with $164 $165 $168 ($4 is responsible)
  $211 = call $41 with $210 $62 ($4 is responsible)
  $212 = call $35 with $211 $55 ($4 is responsible)
  # Builtins::ifElse:1:case-0:didNotMatch
  $213 = { (responsible $214) ->
    $215 = call $41 with $210 $63 ($4 is responsible)
    $216 = $49
  }
  $217 = call $37 with $212 $84 $213 ($4 is responsible)
  $218 = call $90 with $217 $77 $122 ($12 is responsible)
  $219 = call $47 with $120 ($21 is responsible)
  $220 = call $35 with $219 $50 ($22 is responsible)
  $221 = call $90 with $220 $83 $122 ($5 is responsible)
  $222 = call $47 with $120 ($21 is responsible)
  $223 = call $35 with $222 $50 ($22 is responsible)
  $224 = call $90 with $223 $80 $6 ($3 is responsible)
  $225 = call $36 with $120 ($2 is responsible)
  $226 = call $35 with $225 $62 ($1 is responsible)
  $227 = call $90 with $226 $82 $122 ($7 is responsible)
  $228 = call $47 with $121 ($21 is responsible)
  $229 = call $35 with $228 $50 ($22 is responsible)
  $230 = call $90 with $229 $79 $122 ($8 is responsible)
  $231 = call $47 with $121 ($21 is responsible)
  $232 = call $35 with $231 $50 ($22 is responsible)
  $233 = call $90 with $232 $80 $9 ($3 is responsible)
  $234 = call $36 with $121 ($2 is responsible)
  $235 = call $35 with $234 $62 ($1 is responsible)
  $236 = call $90 with $235 $78 $122 ($10 is responsible)
  $237 = call $37 with $119 $120 $121 ($11 is responsible)
}
# Examples:fibonacci:recursive
$238 = { $239 $240 (+ responsible $241) ->
  # Examples:fibonacci:recursive:0
  $242 = { $243 $244 (+ responsible $245) ->
    # Examples:fibonacci:recursive:0:0
    $246 = { $247 (+ responsible $248) ->
      $249 = call $243 with $243 $247 ($31 is responsible)
    }
    $250 = call $240 with $246 $244 ($32 is responsible)
  }
  $251 = call $242 with $242 $239 ($33 is responsible)
}
# Examples:fibonacci:compareTo
$252 = { $253 $254 (+ responsible $255) ->
  $256 = call $47 with $253 ($21 is responsible)
  $257 = call $35 with $256 $51 ($22 is responsible)
  $258 = call $90 with $257 $75 $23 ($18 is responsible)
  $259 = call $47 with $254 ($21 is responsible)
  $260 = call $35 with $259 $51 ($22 is responsible)
  $261 = call $90 with $260 $76 $23 ($16 is responsible)
  $262 = call $39 with $253 $254 ($17 is responsible)
}
# Examples:fibonacci:isLessThan
$263 = { $264 $265 (+ responsible $266) ->
  $267 = call $47 with $264 ($21 is responsible)
  $268 = call $35 with $267 $51 ($22 is responsible)
  $269 = call $90 with $268 $75 $23 ($18 is responsible)
  $270 = call $47 with $265 ($21 is responsible)
  $271 = call $35 with $270 $51 ($22 is responsible)
  $272 = call $90 with $271 $76 $23 ($16 is responsible)
  $273 = call $39 with $264 $265 ($17 is responsible)
  $274 = call $35 with $273 $53 ($1 is responsible)
}
# Examples:fibonacci:fibonacci:2
$275 = { $276 $277 (+ responsible $278) ->
  $279 = call $263 with $277 $64 ($24 is responsible)
  # Examples:fibonacci:fibonacci:2:12
  $280 = { (responsible $281) ->
    $282 = $277
  }
  # Examples:fibonacci:fibonacci:2:13
  $283 = { (responsible $284) ->
    $285 = call $47 with $277 ($21 is responsible)
    $286 = call $35 with $285 $51 ($22 is responsible)
    $287 = call $90 with $286 $81 $25 ($20 is responsible)
    $288 = call $40 with $277 $63 ($19 is responsible)
    $289 = call $276 with $288 ($26 is responsible)
    $290 = call $47 with $277 ($21 is responsible)
    $291 = call $35 with $290 $51 ($22 is responsible)
    $292 = call $90 with $291 $81 $27 ($20 is responsible)
    $293 = call $40 with $277 $64 ($19 is responsible)
    $294 = call $276 with $293 ($28 is responsible)
    $295 = call $47 with $289 ($21 is responsible)
    $296 = call $35 with $295 $51 ($22 is responsible)
    $297 = call $90 with $296 $75 $29 ($15 is responsible)
    $298 = call $47 with $294 ($21 is responsible)
    $299 = call $35 with $298 $51 ($22 is responsible)
    $300 = call $90 with $299 $76 $29 ($13 is responsible)
    $301 = call $38 with $289 $294 ($14 is responsible)
  }
  $302 = call $118 with $279 $280 $283 ($30 is responsible)
}
# Examples:fibonacci:recursive:0
$303 = { $304 $305 (+ responsible $306) ->
  # Examples:fibonacci:recursive:0:0
  $307 = { $308 (+ responsible $309) ->
    $310 = call $304 with $304 $308 ($31 is responsible)
  }
  $311 = call $275 with $307 $305 ($32 is responsible)
}
# Examples:fibonacci:main
$312 = { $313 (+ responsible $314) ->
  $315 = call $303 with $303 $65 ($33 is responsible)
}
$316 = [$52: $263, $54: $312, $58: $238, $48: $252]
