# Optimized MIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::getArgumentCount:11
$3 = Builtins::getArgumentCount:5
$4 = Builtins::ifElse:1
$5 = Builtins::ifElse:12
$6 = Builtins::ifElse:15
$7 = Builtins::ifElse:20
$8 = Builtins::ifElse:26
$9 = Builtins::ifElse:29
$10 = Builtins::ifElse:34
$11 = Builtins::ifElse:42
$12 = Builtins::ifElse:6
$13 = Builtins::intAdd:11
$14 = Builtins::intAdd:18
$15 = Builtins::intAdd:5
$16 = Builtins::intCompareTo:11
$17 = Builtins::intCompareTo:18
$18 = Builtins::intCompareTo:5
$19 = Builtins::intSubtract:18
$20 = Builtins::intSubtract:5
$21 = Builtins::typeIs:19
$22 = Builtins::typeIs:25
$23 = Examples:fibonacci:compareTo:10
$24 = Examples:fibonacci:fibonacci:2:11
$25 = Examples:fibonacci:fibonacci:2:13:11
$26 = Examples:fibonacci:fibonacci:2:13:12
$27 = Examples:fibonacci:fibonacci:2:13:32
$28 = Examples:fibonacci:fibonacci:2:13:33
$29 = Examples:fibonacci:fibonacci:2:13:34
$30 = Examples:fibonacci:fibonacci:2:14
$31 = Examples:fibonacci:recursive:0:0:3
$32 = Examples:fibonacci:recursive:0:6
$33 = Examples:fibonacci:recursive:6
$34 = anonymous:$generated::needs
$35 = builtinEquals
$36 = builtinGetArgumentCount
$37 = builtinIfElse
$38 = builtinIntAdd
$39 = builtinIntCompareTo
$40 = builtinIntSubtract
$41 = builtinListGet
$42 = builtinTagGetValue
$43 = builtinTagHasValue
$44 = builtinTagWithoutValue
$45 = builtinTextConcatenate
$46 = builtinToDebugText
$47 = builtinTypeOf
$48 = CompareTo
$49 = False
$50 = Function
$51 = Int
$52 = IsLessThan
$53 = Less
$54 = Main
$55 = Match
$56 = NoMatch
$57 = Nothing
$58 = Recursive
$59 = Tag
$60 = Text
$61 = True
$62 = 0
$63 = 1
$64 = 2
$65 = 15
$66 = "."
$67 = "Expected False, got "
$68 = "Expected True, got "
$69 = "Expected a Tag, got `"
$70 = "Expected tag to not have a value, but it has one: `"
$71 = "The `condition` must be either `True` or `False`."
$72 = "The `reason` must be a text."
$73 = "`."
$74 = "`a | typeIs Int` was not satisfied"
$75 = "`b | typeIs Int` was not satisfied"
$76 = "`conditionIsBool` was not satisfied"
$77 = "`else | getArgumentCount | equals 0` was not satisfied"
$78 = "`else | typeIs Function` was not satisfied"
$79 = "`function | typeIs Function` was not satisfied"
$80 = "`minuend | typeIs Int` was not satisfied"
$81 = "`then | getArgumentCount | equals 0` was not satisfied"
$82 = "`then | typeIs Function` was not satisfied"
# anonymous:$generated::needs:isConditionTrue:then
$83 = { (responsible $84) ->
  $85 = $61
}
# anonymous:$generated::needs:isConditionBool:then
$86 = { (responsible $87) ->
  $88 = $57
}
# anonymous:$generated::needs
$89 = { $90 $91 $92 (+ responsible $93) ->
  $94 = call $35 with $90 $61 ($34 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $95 = { (responsible $96) ->
    $97 = call $35 with $90 $49 ($34 is responsible)
  }
  $98 = call $37 with $94 $83 $95 ($34 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $99 = { (responsible $100) ->
    $101 = panicking because $71 ($93 is at fault)
  }
  $102 = call $37 with $98 $86 $99 ($34 is responsible)
  $103 = call $47 with $91 ($93 is responsible)
  $104 = call $35 with $103 $60 ($93 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $105 = { (responsible $106) ->
    $107 = panicking because $72 ($93 is at fault)
  }
  $108 = call $37 with $104 $86 $105 ($34 is responsible)
  # anonymous:$generated::needs:condition:else
  $109 = { (responsible $110) ->
    $111 = panicking because $91 ($92 is at fault)
  }
  $112 = call $37 with $90 $86 $109 ($34 is responsible)
}
$113 = ($55,)
# Builtins::not:1:equals:then
$114 = { (responsible $115) ->
  $116 = $113
}
# Builtins::ifElse
$117 = { $118 $119 $120 (+ responsible $121) ->
  $122 = call $47 with $118 ($4 is responsible)
  $123 = call $35 with $59 $122 ($4 is responsible)
  # Builtins::ifElse:1:equals:then
  $124 = { (responsible $125) ->
    $126 = call $44 with $118 ($4 is responsible)
    $127 = call $35 with $61 $126 ($4 is responsible)
    # Builtins::ifElse:1:equals:then
    $128 = { (responsible $129) ->
      $130 = call $43 with $118 ($4 is responsible)
      $131 = call $35 with $49 $130 ($4 is responsible)
      # Builtins::ifElse:1:equals:else
      $132 = { (responsible $133) ->
        $134 = call $46 with $130 ($4 is responsible)
        $135 = call $42 with $118 ($4 is responsible)
        $136 = call $46 with $135 ($4 is responsible)
        $137 = call $45 with $70 $136 ($4 is responsible)
        $138 = call $45 with $137 $73 ($4 is responsible)
        $139 = ($56, $138)
      }
      $140 = call $37 with $131 $114 $132 ($4 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $141 = { (responsible $142) ->
      $143 = call $46 with $126 ($4 is responsible)
      $144 = call $45 with $68 $143 ($4 is responsible)
      $145 = call $45 with $144 $66 ($4 is responsible)
      $146 = ($56, $145)
    }
    $147 = call $37 with $127 $128 $141 ($4 is responsible)
  }
  # Builtins::ifElse:1:equals:else
  $148 = { (responsible $149) ->
    $150 = call $46 with $122 ($4 is responsible)
    $151 = call $45 with $69 $150 ($4 is responsible)
    $152 = call $45 with $151 $73 ($4 is responsible)
    $153 = ($56, $152)
  }
  $154 = call $37 with $123 $124 $148 ($4 is responsible)
  $155 = call $41 with $154 $62 ($4 is responsible)
  $156 = call $35 with $155 $55 ($4 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $157 = { (responsible $158) ->
    $159 = $154
  }
  # Builtins::ifElse:1:isMatch:else
  $160 = { (responsible $161) ->
    $162 = call $47 with $118 ($4 is responsible)
    $163 = call $35 with $59 $162 ($4 is responsible)
    # Builtins::ifElse:1:equals:then
    $164 = { (responsible $165) ->
      $166 = call $44 with $118 ($4 is responsible)
      $167 = call $35 with $49 $166 ($4 is responsible)
      # Builtins::ifElse:1:equals:then
      $168 = { (responsible $169) ->
        $170 = call $43 with $118 ($4 is responsible)
        $171 = call $35 with $49 $170 ($4 is responsible)
        # Builtins::ifElse:1:equals:else
        $172 = { (responsible $173) ->
          $174 = call $46 with $170 ($4 is responsible)
          $175 = call $42 with $118 ($4 is responsible)
          $176 = call $46 with $175 ($4 is responsible)
          $177 = call $45 with $70 $176 ($4 is responsible)
          $178 = call $45 with $177 $73 ($4 is responsible)
          $179 = ($56, $178)
        }
        $180 = call $37 with $171 $114 $172 ($4 is responsible)
      }
      # Builtins::ifElse:1:equals:else
      $181 = { (responsible $182) ->
        $183 = call $46 with $166 ($4 is responsible)
        $184 = call $45 with $67 $183 ($4 is responsible)
        $185 = call $45 with $184 $66 ($4 is responsible)
        $186 = ($56, $185)
      }
      $187 = call $37 with $167 $168 $181 ($4 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $188 = { (responsible $189) ->
      $190 = call $46 with $162 ($4 is responsible)
      $191 = call $45 with $69 $190 ($4 is responsible)
      $192 = call $45 with $191 $73 ($4 is responsible)
      $193 = ($56, $192)
    }
    $194 = call $37 with $163 $164 $188 ($4 is responsible)
  }
  $195 = call $37 with $156 $157 $160 ($4 is responsible)
  $196 = call $41 with $195 $62 ($4 is responsible)
  $197 = call $35 with $196 $55 ($4 is responsible)
  # Builtins::ifElse:1:case-0:didNotMatch
  $198 = { (responsible $199) ->
    $200 = call $41 with $195 $63 ($4 is responsible)
    $201 = $49
  }
  $202 = call $37 with $197 $83 $198 ($4 is responsible)
  $203 = call $89 with $202 $76 $121 ($12 is responsible)
  $204 = call $47 with $119 ($21 is responsible)
  $205 = call $35 with $204 $50 ($22 is responsible)
  $206 = call $89 with $205 $82 $121 ($5 is responsible)
  $207 = call $47 with $119 ($21 is responsible)
  $208 = call $35 with $207 $50 ($22 is responsible)
  $209 = call $89 with $208 $79 $6 ($3 is responsible)
  $210 = call $36 with $119 ($2 is responsible)
  $211 = call $35 with $210 $62 ($1 is responsible)
  $212 = call $89 with $211 $81 $121 ($7 is responsible)
  $213 = call $47 with $120 ($21 is responsible)
  $214 = call $35 with $213 $50 ($22 is responsible)
  $215 = call $89 with $214 $78 $121 ($8 is responsible)
  $216 = call $47 with $120 ($21 is responsible)
  $217 = call $35 with $216 $50 ($22 is responsible)
  $218 = call $89 with $217 $79 $9 ($3 is responsible)
  $219 = call $36 with $120 ($2 is responsible)
  $220 = call $35 with $219 $62 ($1 is responsible)
  $221 = call $89 with $220 $77 $121 ($10 is responsible)
  $222 = call $37 with $118 $119 $120 ($11 is responsible)
}
# Examples:fibonacci:recursive
$223 = { $224 $225 (+ responsible $226) ->
  # Examples:fibonacci:recursive:0
  $227 = { $228 $229 (+ responsible $230) ->
    # Examples:fibonacci:recursive:0:0
    $231 = { $232 (+ responsible $233) ->
      $234 = call $228 with $228 $232 ($31 is responsible)
    }
    $235 = call $225 with $231 $229 ($32 is responsible)
  }
  $236 = call $227 with $227 $224 ($33 is responsible)
}
# Examples:fibonacci:compareTo
$237 = { $238 $239 (+ responsible $240) ->
  $241 = call $47 with $238 ($21 is responsible)
  $242 = call $35 with $241 $51 ($22 is responsible)
  $243 = call $89 with $242 $74 $23 ($18 is responsible)
  $244 = call $47 with $239 ($21 is responsible)
  $245 = call $35 with $244 $51 ($22 is responsible)
  $246 = call $89 with $245 $75 $23 ($16 is responsible)
  $247 = call $39 with $238 $239 ($17 is responsible)
}
# Examples:fibonacci:isLessThan
$248 = { $249 $250 (+ responsible $251) ->
  $252 = call $47 with $249 ($21 is responsible)
  $253 = call $35 with $252 $51 ($22 is responsible)
  $254 = call $89 with $253 $74 $23 ($18 is responsible)
  $255 = call $47 with $250 ($21 is responsible)
  $256 = call $35 with $255 $51 ($22 is responsible)
  $257 = call $89 with $256 $75 $23 ($16 is responsible)
  $258 = call $39 with $249 $250 ($17 is responsible)
  $259 = call $35 with $258 $53 ($1 is responsible)
}
# Examples:fibonacci:fibonacci:2
$260 = { $261 $262 (+ responsible $263) ->
  $264 = call $248 with $262 $64 ($24 is responsible)
  # Examples:fibonacci:fibonacci:2:12
  $265 = { (responsible $266) ->
    $267 = $262
  }
  # Examples:fibonacci:fibonacci:2:13
  $268 = { (responsible $269) ->
    $270 = call $47 with $262 ($21 is responsible)
    $271 = call $35 with $270 $51 ($22 is responsible)
    $272 = call $89 with $271 $80 $25 ($20 is responsible)
    $273 = call $40 with $262 $63 ($19 is responsible)
    $274 = call $261 with $273 ($26 is responsible)
    $275 = call $47 with $262 ($21 is responsible)
    $276 = call $35 with $275 $51 ($22 is responsible)
    $277 = call $89 with $276 $80 $27 ($20 is responsible)
    $278 = call $40 with $262 $64 ($19 is responsible)
    $279 = call $261 with $278 ($28 is responsible)
    $280 = call $47 with $274 ($21 is responsible)
    $281 = call $35 with $280 $51 ($22 is responsible)
    $282 = call $89 with $281 $74 $29 ($15 is responsible)
    $283 = call $47 with $279 ($21 is responsible)
    $284 = call $35 with $283 $51 ($22 is responsible)
    $285 = call $89 with $284 $75 $29 ($13 is responsible)
    $286 = call $38 with $274 $279 ($14 is responsible)
  }
  $287 = call $117 with $264 $265 $268 ($30 is responsible)
}
# Examples:fibonacci:recursive:0
$288 = { $289 $290 (+ responsible $291) ->
  # Examples:fibonacci:recursive:0:0
  $292 = { $293 (+ responsible $294) ->
    $295 = call $289 with $289 $293 ($31 is responsible)
  }
  $296 = call $260 with $292 $290 ($32 is responsible)
}
# Examples:fibonacci:main
$297 = { $298 (+ responsible $299) ->
  $300 = call $288 with $288 $65 ($33 is responsible)
}
$301 = [$52: $248, $54: $297, $58: $223, $48: $237]
