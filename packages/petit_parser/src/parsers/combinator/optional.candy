use ....parsers

class OptionalParser<Item, Output> {
  let parser: Parser<Item, Output>
}
impl<Item, Output> OptionalParser<Item, Output>: Parser<Item, Maybe<Output>> {
  fun parse(context: Context<Item>): Result<Success<Maybe<Output>>, Failure> {
    let result = parser.parse(context)
    if result is Error<Success<Output>, Failure> {
      return Ok<Success<Maybe<Output>>, Failure>(context.success<Maybe<Output>>(None<Output>()))
    }

    let result = result.unwrap()
    let success = Success<Maybe<Output>>(Some<Output>(result.output), result.offset)
    Ok<Success<Maybe<Output>>, Failure>(success)
  }
}
