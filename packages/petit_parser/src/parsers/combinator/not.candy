use ....parsers

class NotParser<Item, Output> {
  // TODO(JonasWanke): remove Output type parameter when we support out-variance
  let parser: Parser<Item, Output>
  let message: String
}
impl<Item, Output> NotParser<Item, Output>: Parser<Item, Failure> {
  fun parse(context: Context<Item>): Result<Success<Failure>, Failure> {
    let result = parser.parse(context)
    if result is Error<Success<Output>, Failure> {
      let failure = (result as Error<Success<Output>, Failure>).error
      return Ok<Success<Failure>, Failure>(context.success<Failure>(failure))
    }

    Error<Success<Failure>, Failure>(context.failure(message))
  }
}
