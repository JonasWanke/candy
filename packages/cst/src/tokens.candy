use petit_parser

public trait CstToken {
  public let span: Span
}
public trait CstContentToken: CstToken {
  public let trailingTrivia: List<WhitespaceToken | CommentToken>
}


public class KeywordToken {
  public let span: Span
  public let trailingTrivia: List<WhitespaceToken | CommentToken>

  public let keyword: String
  /// May be one of the following:
  ///
  /// * directives: use, crate
  /// * declarations: module, trait, impl, type, fun, let
  /// * control flow: return
  ///
  /// TODO(JonasWanke): convert this to an enum when we support these
}
impl KeywordToken: CstToken & CstContentToken


public class IdentifierToken {
  public let span: Span
  public let trailingTrivia: List<WhitespaceToken | CommentToken>
  public let identifier: String
}
impl IdentifierToken: CstToken & CstContentToken


public class IntLiteralToken {
  public let span: Span
  public let trailingTrivia: List<WhitespaceToken | CommentToken>
  public let value: Int
}
impl IntLiteralToken: CstToken & CstContentToken

public class StringLiteralToken {
  public let span: Span
  public let trailingTrivia: List<WhitespaceToken | CommentToken>
  public let value: String
}
impl StringLiteralToken: CstToken & CstContentToken


public class PunctuationToken {
  public let span: Span
  public let trailingTrivia: List<WhitespaceToken | CommentToken>

  public let punctuation: String
  /// May be one of the following:
  ///
  /// `-`, `->`, `,`, `:`, `!=`, `"`, `(`, `)`, `{`, `}`, `[`, `]`, `*`, `/`,
  /// `&`, `%`,`+`, `<`, `<=`, `=`, `==`, `=>`, `>`, `>=`, `|`, `~/`, `.`, `\`
  ///
  /// TODO(JonasWanke): convert this to an enum when we support these
}
impl PunctuationToken: CstToken & CstContentToken


public class WhitespaceToken {
  public let span: Span
  public let content: String
}
impl WhitespaceToken: CstToken


public class CommentToken {
  public let span: Span
  public let content: String

  public let type: String
  /// May be one of the following:
  ///
  /// * "doc": `# foo`
  /// * "line": `## foo`
  /// * "block": `/* foo\nbar */`
}
impl CommentToken: CstToken
