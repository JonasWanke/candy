use ..declarations
use ..node
use ..tokens

public class CstFile {
  public let leadingTrivia: List<WhitespaceToken | CommentToken>
  public let content: List<CstNode<CstUseLine | CstDeclaration>>
}


public class CstUseLine {
  public let modifiers: List<CstNode<IdentifierToken>>
  public let useKeyword: CstNode<KeywordToken>
  public let target: Maybe<CstNode<CstUseLineTarget>>
}

public trait /* enum */ CstUseLineTarget

public class CstLocalRelativeUseLineTarget {
  public let parentNavigations: List<CstNode<PunctuationToken>>
  public let path: List<CstNode<IdentifierToken | PunctuationToken>>
}
impl CstLocalRelativeUseLineTarget: CstUseLineTarget

public class CstGlobalUseLineTarget {
  public let packagePath: List<CstNode<IdentifierToken | PunctuationToken>>
}
impl CstGlobalUseLineTarget: CstUseLineTarget
