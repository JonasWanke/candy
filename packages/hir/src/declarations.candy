use compiler_utils

public trait HirDeclaration {
  public let parent: Package | HirModule | HirTrait | HirClass
  public fun name(): String
}

public trait HirModule
impl HirModule: HirDeclaration 
public class HirTopLevelModule {
  public let parent: Package
}
impl HirTopLevelModule: HirDeclaration {
  fun name(): String { name_ }
}
public class HirInnerModule {
  public let parent: HirModule
  public let name_: String
}
impl HirInnerModule: HirDeclaration {
  fun name(): String { name_ }
}

public class HirTrait {
  public let parent: HirModule | HirTrait | HirClass
  public let name_: String
}
impl HirTrait: HirDeclaration {
  fun name(): String { name_ }
}

public class HirImpl {
  public let parent: HirModule
  public let disambiguator: Int
}
impl HirImpl: HirDeclaration {
  fun name(): String { "impl" }
}

public class HirClass {
  public let parent: HirModule | HirTrait | HirClass
  public let name_: String
}
impl HirClass: HirDeclaration {
  fun name(): String { name_ }
}

public class HirConstructor {
  public let parent: HirClass
  public let disambiguator: Int
}
impl HirConstructor: HirDeclaration {
  fun name(): String { "constructor" }
}

public class HirFunction {
  public let parent: HirModule | HirTrait | HirImpl | HirClass
  public let name_: String
  public let disambiguator: Int
}
impl HirFunction: HirDeclaration {
  fun name(): String { name_ }
}

public class HirProperty {
  public let parent: HirModule | HirTrait | HirImpl | HirClass
  public let name_: String
}
impl HirProperty: HirDeclaration {
  fun name(): String { name_ }
}
