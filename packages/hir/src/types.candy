use ..declarations

public trait HirInlineType


public class HirNamedType {
  public let declaration: HirTrait | HirType
  public let parameterTypes: List<HirInlineType>
}
impl HirNamedType: HirInlineType


public class HirTupleType {
  public let types: List<HirInlineType>
}
impl HirTupleType: HirInlineType


public class HirNamedTupleType {
  public let types: Map<String, HirInlineType>
}


public class HirEnumType {
  public let types: Map<String, HirInlineType>
}


public class HirFunctionType {
  public let receiverType: Maybe<HirInlineType>
  public let parameterTypes: List<HirInlineType>
  public let returnType: HirInlineType
}
impl HirFunctionType: HirInlineType


public class HirIntersectionType {
  public let types: List<HirInlineType>
  // TODO(JonasWanke): Use a `Set<HirInlineType>` when we have sets that keep insertion order.
}
impl HirIntersectionType: HirInlineType


public class HirThisType
impl HirThisType: HirInlineType


public class HirParameterType {
  public let declaration: HirTrait | HirType | HirFunction
  public let name: String
}
impl HirParameterType: HirInlineType


public class HirReflectionType {
  public let target: HirModule | HirTrait | HirType | HirFunction | HirProperty | HirParameterType
}
impl HirReflectionType: HirInlineType
