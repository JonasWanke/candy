use compiler_utils
use cst
use petit_parser

public class ExpectedTwoOrMoreItemsInPositionalTupleCompilerError {
  public let file: FancyFile
  public let node: CstNode<CstPositionalTupleType | CstPositionalTupleExpression>
}
impl ExpectedTwoOrMoreItemsInPositionalTupleCompilerError: CompilerError {
  public fun id(): String { "expected-two-or-more-items-in-positional-tuple" }

  fun span(): Span {
    if node.child is CstPositionalTupleType {
      return node.cast<CstPositionalTupleType>().child.openingParenthesis.child.span
    }
    if node.child is CstPositionalTupleExpression {
      return node.cast<CstPositionalTupleExpression>().child.openingParenthesis.child.span
    }
    throw "Unknown body: {node}."
  }
  public fun location(): Location { Location(file, span()) }
  public fun title(): String { "Expected two or more items in positional tuple." }
  public fun description(): String {
    /// TODO(never, JonasWanke): add a description
    ""
  }
}
