use ..node
use ..declarations

public class AstFile {
  public let id: AstNodeId
  public let useLines: List<AstUseLine>
  public let declarations: List<
    AstModule
    | AstTrait
    | AstImpl
    | AstClass
    | AstFunction
    | AstProperty
  >
}
impl AstFile: AstNode


public trait /* enum */ AstUseLine
impl AstUseLine: AstNode

public class AstLocalAbsoluteUseLine {
  public let id: AstNodeId
  public let modifiers: List<String>
  public let path: List<String>
}
impl AstLocalAbsoluteUseLine: AstUseLine

public class AstLocalRelativeUseLine {
  public let id: AstNodeId
  public let modifiers: List<String>
  public let parentNavigations: Int
  public let path: List<String>
}
impl AstLocalRelativeUseLine: AstUseLine

public class AstGlobalUseLine {
  public let id: AstNodeId
  public let modifiers: List<String>
  public let packagePath: List<String>
  public let moduleName: Maybe<String>
}
impl AstGlobalUseLine: AstUseLine
