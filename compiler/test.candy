# This is the Candy core library.

typeOf value = ✨.typeOf value

equals a b = ✨.equals a b

panic message = ✨.panic message

isInt value = equals (typeOf value) Int
isText value = equals (typeOf value) Text
isSymbol value = equals (typeOf value) Symbol

isBool value =
  isTrue = equals value True
  isFalse = equals value False
  ✨.ifElse isTrue { True } { isFalse }

not a =
  needs (isBool a)
  ✨.ifElse a { False } { True }
and a b =
  needs (isBool a)
  needs (isBool b)
  ✨.ifElse a { b } { False }
or a b =
  needs (isBool a)
  needs (isBool b)
  ✨.ifElse a { True } { b }

check condition =
  needs (isBool condition)
  ✨.ifElse
    condition
    {}
    { panic "A check didn't succeed" }

isFunction value = equals (typeOf value) Function
getArgumentCount function =
  needs (isFunction function)
  ✨.getArgumentCount function
isFunction0 value = and (isFunction value) (equals (getArgumentCount value) 0)
isFunction1 value = and (isFunction value) (equals (getArgumentCount value) 1)
isFunction2 value = and (isFunction value) (equals (getArgumentCount value) 2)
isFunction3 value = and (isFunction value) (equals (getArgumentCount value) 3)
isFunction4 value = and (isFunction value) (equals (getArgumentCount value) 4)
isFunction5 value = and (isFunction value) (equals (getArgumentCount value) 5)

ifElse condition then else =
  needs (isBool condition)
  needs (isFunction0 then)
  needs (isFunction0 else)
  ✨.ifElse condition then else
if condition then =
  needs (isBool condition)
  needs (isFunction0 then)
  ifElse condition then {}

add a b =
  needs (isInt a)
  needs (isInt b)
  ✨.add a b

print text = ✨.print text

main =
  foo = 3
  bar = { n -> 5 }
  baz =
    print "abc"
    123
  bar 5
  foo
